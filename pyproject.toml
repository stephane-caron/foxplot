[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "foxplot"
readme = "README.md"
authors = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
maintainers = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
dynamic = ['version', 'description']
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "ipython >=8.0.1",
    "msgpack >=1.0.4",
    "numpy >=1.15.4",
    "uplot-python >=1.0.0",
]
keywords = ["json", "time", "series", "plot"]

[project.scripts]
foxplot = "foxplot.cli:main"

[project.urls]
Homepage = "https://github.com/stephane-caron/foxplot"
Source = "https://github.com/stephane-caron/foxplot"
Tracker = "https://github.com/stephane-caron/foxplot/issues"
Changelog = "https://github.com/stephane-caron/foxplot/blob/master/CHANGELOG.md"

[tool.pytype]
inputs = ['foxplot']

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # pydocstyle
    "D"
]
ignore = [
    "D401",  # good for methods but not for class docstrings
    "D405",  # British-style section names are also "proper"!
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.8"
ipython = ">=8.0.1"
msgpack-python = ">=1.0.4"
numpy = ">=1.15.4"
uplot-python = ">=1.0.0"

[tool.pixi.feature.test]
dependencies = { pytest = ">=7.1.2" }
tasks.test = { cmd = "pytest tests" }

[tool.pixi.feature.coverage]
dependencies = { coverage = ">=5.5" }
tasks.coverage-erase = { cmd = "coverage erase" }
tasks.coverage-run = { cmd = "coverage run -m unittest discover", depends-on = ["coverage-erase"] }
tasks.coverage = { cmd = "coverage report --include=\"foxplot/**\"", depends-on = ["coverage-run"] }

[tool.pixi.feature.lint]
dependencies = { mypy = ">=1.10.0", pylint = ">=2.8.2", ruff = ">=0.4.3", types-setuptools = ">=65.6.0.2" }
tasks.mypy = { cmd = "mypy foxplot --ignore-missing-imports" }
tasks.pylint = { cmd = "pylint foxplot --exit-zero --rcfile=pyproject.toml" }
tasks.ruff-check = { cmd = "ruff check foxplot" }
tasks.ruff-format = { cmd = "ruff format --check foxplot" }
tasks.lint = { depends-on = ["mypy", "pylint", "ruff-check", "ruff-format"] }

[tool.pixi.feature.pytype]
dependencies = { pytype = ">=2023.5.24" }
tasks.pytype = { cmd = "pytype foxplot" }

[tool.pixi.feature.py38]
dependencies = { python = "3.8.*" }

[tool.pixi.feature.py39]
dependencies = { python = "3.9.*" }

[tool.pixi.feature.py310]
dependencies = { python = "3.10.*" }

[tool.pixi.feature.py311]
dependencies = { python = "3.11.*" }

[tool.pixi.feature.py312]
dependencies = { python = "3.12.*" }

[tool.pixi.environments]
test-py38 = { features = ["py38", "test"], solve-group = "py38" }
test-py39 = { features = ["py39", "test"], solve-group = "py39" }
test-py310 = { features = ["py310", "test"], solve-group = "py310" }
test-py311 = { features = ["py311", "test"], solve-group = "py311" }
test-py312 = { features = ["py312", "test"], solve-group = "py312" }
coverage = { features = ["py312", "coverage"], solve-group = "py312" }
lint = { features = ["py312", "lint"], solve-group = "py312" }
